name: Deploy
run-name: Deploy to ${{ inputs.deploy_env }}
on:
  workflow_dispatch:
    inputs:
      deploy_env:
        type: choice
        default: PRODUCTION
        description: Deploy enviroment
        options:
        - PRODUCTION

jobs:
  deploy:
    name: Deploy To ${{ github.event.inputs.deploy_env }}
    runs-on: [self-hosted, linux, x64, "${{ github.event.inputs.deploy_env }}"]
    
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PACKAGE_TOKEN }}

    - name: Pull latest Falconflare image
      run: docker pull ghcr.io/mpuertadev/falconflare:latest

    - name: Update Falconflare service
      run: |
        cd ~/falconflare-platform

        docker compose stop falconflare || true
        
        docker compose rm -f falconflare || true
        
        ENV=${{ vars.ENV }} ELASTICSEARCH_HOST=${{ secrets.ELASTICSEARCH_HOST }} ELASTICSEARCH_API_KEY=${{ secrets.ELASTICSEARCH_API_KEY }} INFI_URI=${{ secrets.INFI_URI }} CLIENT_ID=${{ secrets.CLIENT_ID }} CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} PROJECT_ID=${{ secrets.PROJECT_ID }} docker compose up -d falconflare

    - name: Clean up old images
      run: |
        docker image prune -f
        
        docker images --format "{{.ID}} {{.Repository}}" | 
        grep "ghcr.io/mpuertadev/falconflare" | 
        sort -k2 -r | 
        awk 'NR>3 {print $1}' | 
        xargs -r docker rmi